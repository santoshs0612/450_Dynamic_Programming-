
Given a string of S as input. Your task is to write a program to remove or delete the minimum number of characters from the string so that the resultant string is a palindrome.
Note: The order of characters in the string should be maintained.

Example 1:

Input: S = "aebcbda"
Output: 2
Explanation: Remove characters 'e' 
and 'd'.
Example 2:

Input: S = "geeksforgeeks"
Output: 8
Explanation: One of the possible result
string can be "eefee", so answer is 
13 - 5 = 8.








class Solution{
  public:
  int solver(string S1,string S2,int n,int m,vector<vector<int>> &dp)
  {
      for(int i=0;i<n+1;i++)
      {
          for(int j=0;j<n+1;j++)
          {
              if(i==0|| j==0)
              {
                  dp[i][j]=0;
              }
          }
      }
      
      for(int i=1;i<n+1;i++)
      {
          for(int j=1;j<n+1;j++)
          {
              if(S1[i-1]==S2[j-1])
              {
                  dp[i][j]=dp[i-1][j-1]+1;
              }
              else 
              {
                  dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
              }
          }
      }
      
      return n-dp[n][n];
  }
    int minimumNumberOfDeletions(string S) { 
        // code here
        int n= S.length();
        string str=S;
        reverse(str.begin(),str.end());
        vector<vector<int>> dp(n+1,vector<int>(n+1));
        return solver(S,str,n,n,dp);
    } 
};
